apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-file
  namespace: nginx
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    load_module modules/ngx_stream_js_module.so;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }

    # TCP/UDP proxy and load balancing block
    #
    stream {
        resolver 8.8.8.8 valid=10s;
        mqtt on;
        mqtt_preread on;
        
        # Server block for MQTT handling
        server {
            listen 1883;  # MQTT default port

            # Proxy the connection to the appropriate upstream
            proxy_pass $mqtt_preread_clientid:8883;
            proxy_ssl on;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            
            # Configure client certificate for mTLS
            proxy_ssl_certificate /etc/nginx/tls.crt;
            proxy_ssl_certificate_key /etc/nginx/tls.key;
            
            # Insert username and password in the CONNECT message
            set $username 'mqttuser';
            set $password 'ilovef5';
            
            mqtt_set_connect username $username;
            mqtt_set_connect password $password;
        }
        
        # Debug: Log Client Identifier
        log_format mqtt_log '$remote_addr [$time_local] $protocol '
                            'client_id=$mqtt_preread_clientid bytes_sent=$bytes_sent bytes_received=$bytes_received session_time=$session_time';
        access_log /var/log/nginx/mqtt_access.log mqtt_log;
    }

    # NGINX Plus requires a valid JSON Web Token (JWT), available at
    #       https://my.f5.com/manage/s/subscriptions
    # The token verifies your subscription and sends usage information to F5.
    # Learn more about licensing and usage reporting:
    #       https://docs.nginx.com/solutions/about-subscription-licenses
    # Learn more about the "mgmt" module:
    #       https://nginx.org/en/docs/ngx_mgmt_module.html
    #mgmt {
        # Uncomment to change default reporting values
        #usage_report endpoint=product.connect.nginx.com;
        #license_token /etc/nginx/license.jwt;

        # Set to 'off' to begin the 180-day reporting enforcement grace period.
        # Reporting must begin or resume before the end of the grace period
        # to ensure continued operation.
        #enforce_initial_report on;

        # Set to 'off' to trust all SSL certificates (not recommended).
        # Useful for reporting to NGINX Instance Manager without a local PKI.
        #ssl_verify on;
    #}
